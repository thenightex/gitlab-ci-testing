image: node:latest
cache:
    paths:
        - node_modules/

stages:
  - lint
  - build
  - prepare
  - release

lint:
    stage: lint
    script:
        - npm install
        - npm run lint
build:
    stage: build
    script:
        - npm install
        - npm run build
    artifacts:
        expire_in: 1h
        paths:
            - dist/

prepare_job:
    # muss vor release passieren
    stage: prepare
    rules:
        # job nicht ausf端hren wenn tag manuell angelegt
        - if: $CI_COMMIT_TAG
          when: never
        # job ausf端hren wenn push/merge zu default branch
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    script:
        - apt-get update && apt-get install -yqq jq
        - export VERSION=$(cat package.json | jq -r .version)
        - echo "EXTRA_DESCRIPTION=beschreibung" >> variables.env
        - echo "TAG=v$VERSION" >> variables.env
    artifacts:
        reports:
            dotenv: variables.env  

release:
    stage: release
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    needs:
        - job: prepare_job
          artifacts: true
    rules:
        # job nicht ausf端hren wenn tag manuell angelegt
        - if: $CI_COMMIT_TAG
          when: never
        # job ausf端hren wenn push/merge zu default branch
        - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    script:
        - echo 'running release job for tag $TAG'
    release:
        name: 'Release $TAG'
        description: 'Created using the release-cli $EXTRA_DESCRIPTION'
        tag_name: '$TAG'
        ref: '$CI_COMMIT_SHA'
